// <auto-generated />
using System;
using Financial_management_system_in_educational_institutions_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Financial_management_system_in_educational_institutions_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250501142419_MultitenancyInitial")]
    partial class MultitenancyInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Account", b =>
                {
                    b.Property<int>("accId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accId"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("organisationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("twoFAcode")
                        .HasColumnType("int");

                    b.Property<DateTime>("twoFAtime")
                        .HasColumnType("datetime2");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("accId");

                    b.ToTable("tblAccounts");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Adresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("KodiPostal")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Qyteti")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rruga")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Shteti")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblAdresat", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.InventariAktual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pershkrimi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Sasia")
                        .HasColumnType("int");

                    b.Property<string>("Shifra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ShkollaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShkollaId");

                    b.ToTable("tblInventariAktual", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Kompania", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("AdresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lokacioni")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NrXhirologaris")
                        .HasColumnType("int");

                    b.Property<int>("PronariId")
                        .HasColumnType("int");

                    b.Property<string>("Sherbimi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AdresaId");

                    b.HasIndex("PronariId");

                    b.ToTable("tblKompania", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Komuna", b =>
                {
                    b.Property<int>("komunaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("komunaId"));

                    b.Property<int>("accId")
                        .HasColumnType("int");

                    b.Property<decimal>("buxhetiAktual")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ditaNdarjesAuto")
                        .HasColumnType("bit");

                    b.Property<int>("nrPopullsis")
                        .HasColumnType("int");

                    b.Property<string>("qyteti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("komunaId");

                    b.HasIndex("accId");

                    b.ToTable("tblKomuna", "shared");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Marreveshja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeriMeData")
                        .HasColumnType("datetime2");

                    b.Property<int>("KompaniaId")
                        .HasColumnType("int");

                    b.Property<int>("KomunaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaData")
                        .HasColumnType("datetime2");

                    b.Property<int>("TenderiId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KompaniaId");

                    b.HasIndex("KomunaId");

                    b.HasIndex("TenderiId");

                    b.ToTable("tblMarreveshja", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Ndalesat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aprovuari")
                        .HasColumnType("bit");

                    b.Property<string>("Arsyeja")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ShumaNdaleses")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StafiShkollesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StafiShkollesId");

                    b.ToTable("tblNdalesat", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.NdarjetBuxhetit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Auto")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Shenime")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ShkollaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Shuma")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShkollaId");

                    b.ToTable("tblNdarjetBuxhetit", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.OretShtese", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataAngazhimit")
                        .HasColumnType("datetime2");

                    b.Property<int>("NrOreve")
                        .HasColumnType("int");

                    b.Property<decimal>("PagesaPerOre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shenime")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("StafiShkollesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StafiShkollesId");

                    b.ToTable("tblOretShtese", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Pagesat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPageses")
                        .HasColumnType("datetime2");

                    b.Property<string>("NrFletPageses")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PorositeId")
                        .HasColumnType("int");

                    b.Property<decimal>("TVSH")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PorositeId");

                    b.ToTable("tblPagesat", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Person", b =>
                {
                    b.Property<int>("numriPersonal")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataLindjes")
                        .HasColumnType("datetime2");

                    b.Property<string>("emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gjinia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mbiemri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nacionaliteti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("qyteti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shteti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("numriPersonal");

                    b.ToTable("tblPersons", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Porosite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPorosise")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProduktiId")
                        .HasColumnType("int");

                    b.Property<int>("Sasia")
                        .HasColumnType("int");

                    b.Property<string>("Shenime")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ShkollaId")
                        .HasColumnType("int");

                    b.Property<string>("Statusi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProduktiId");

                    b.HasIndex("ShkollaId");

                    b.ToTable("tblPorosite", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Produkti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cmimi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fotografia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("KompaniaId")
                        .HasColumnType("int");

                    b.Property<string>("Origjina")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pershkrimi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Prodhuesi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SasiaNeStok")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KompaniaId");

                    b.ToTable("tblProdukti", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblRoles", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Shkolla", b =>
                {
                    b.Property<int>("shkollaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("shkollaId"));

                    b.Property<int?>("AccountaccId")
                        .HasColumnType("int");

                    b.Property<int>("accId")
                        .HasColumnType("int");

                    b.Property<bool>("autoNdarja")
                        .HasColumnType("bit");

                    b.Property<decimal>("buxhetiAktual")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("drejtori")
                        .HasColumnType("int");

                    b.Property<string>("emriShkolles")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("lokacioni")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("nrNxenesve")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("shkollaId");

                    b.HasIndex("AccountaccId");

                    b.HasIndex("drejtori");

                    b.ToTable("tblShkolla", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.StafiShkolles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("numriOreve")
                        .HasColumnType("int");

                    b.Property<int>("numriPersonal")
                        .HasColumnType("int");

                    b.Property<decimal>("paga")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("pozita")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("shkollaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("numriPersonal");

                    b.HasIndex("shkollaId");

                    b.ToTable("tblStafiShkolles", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Tenderi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pershkrimi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Sherbimi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Shuma")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblTenderi", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.InventariAktual", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Shkolla", "Shkolla")
                        .WithMany()
                        .HasForeignKey("ShkollaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shkolla");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Kompania", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Adresa", "Adresa")
                        .WithMany()
                        .HasForeignKey("AdresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PronariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Adresa");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Komuna", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("accId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Marreveshja", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Kompania", "Kompania")
                        .WithMany()
                        .HasForeignKey("KompaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Komuna", "Komuna")
                        .WithMany()
                        .HasForeignKey("KomunaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Tenderi", "Tenderi")
                        .WithMany()
                        .HasForeignKey("TenderiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kompania");

                    b.Navigation("Komuna");

                    b.Navigation("Tenderi");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Ndalesat", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.StafiShkolles", "StafiShkolles")
                        .WithMany()
                        .HasForeignKey("StafiShkollesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StafiShkolles");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.NdarjetBuxhetit", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Shkolla", "Shkolla")
                        .WithMany()
                        .HasForeignKey("ShkollaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shkolla");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.OretShtese", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.StafiShkolles", "StafiShkolles")
                        .WithMany()
                        .HasForeignKey("StafiShkollesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StafiShkolles");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Pagesat", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Porosite", "Porosite")
                        .WithMany()
                        .HasForeignKey("PorositeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Porosite");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Porosite", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Produkti", "Produkti")
                        .WithMany()
                        .HasForeignKey("ProduktiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Shkolla", "Shkolla")
                        .WithMany()
                        .HasForeignKey("ShkollaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkti");

                    b.Navigation("Shkolla");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Produkti", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Kompania", "Kompania")
                        .WithMany()
                        .HasForeignKey("KompaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kompania");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.Shkolla", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountaccId");

                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("drejtori")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Financial_management_system_in_educational_institutions_API.Models.StafiShkolles", b =>
                {
                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("numriPersonal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Financial_management_system_in_educational_institutions_API.Models.Shkolla", "Shkolla")
                        .WithMany()
                        .HasForeignKey("shkollaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Shkolla");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
